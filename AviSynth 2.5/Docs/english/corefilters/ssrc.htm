<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <title>SSRC Filter</title>
   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>
<body >
<h2>
<a href="#Tone" name="SSRC"></a>SSRC
</h2>
<p><code>SSRC </code>(<var>int samplerate, bool &quot;fast&quot;</var>)
<p><code>SSRC</code> Shibata Sample Rate Converter is a resampler. Audio is always converted to float. This filter will result in better audio quality than
<a href="resampleaudio.htm"><code>ResampleAudio</code></a>.<br>
   It uses SSRC by <a href="http://shibatch.sourceforge.net/"><cite>Naoki
Shibata</cite></a>, which offers the best resample quality available.<br>
  <br>
  Sampling rates of 44.1kHz and 48kHz are populary used, but the ratio of these two frequency is
147:160, and that are not small numbers. Therefore, sampling rate conversion without degradation of sound quality requires filters with very large order, and it's difficult to achive both quality and speed. This program achieved relatively fast and high quality with two different kinds of filters combined skillfully.<br>
  <br>
  <b>Parameters:</b></p>
<table border="1" width="100%">
  <tr>
    <td width="9%">samplerate</td>
    <td width="91%">Samplerate must be an integer.</td>
  </tr>
  <tr>
    <td width="9%">fast</td>
    <td width="91%"> This will enable faster processing at slightly lower quality. Disable this if you are doing large samplerate conversions (more than a factor 2). Default:
      true.</td>
  </tr>
</table>
<p>SSRC doesn't work for arbitrary ratios of the samplerate of the source and target
clip. The following ratios are allowed (see SSRC.c):</p>
<pre>sfrq = samplerate of source clip
dfrq = samplerate of destination clip
frqgcd = gcd(sfrq,dfrq)
fs1 = dfrq * sfrq / frqgcd
Resamping is possible if: (fs1/dfrq == 1) or (fs1/dfrq % 2 == 0) or (fs1/dfrq % 3 == 0)

example for which resampling is possible:
sfrq = 44.1 kHz
dfrq = 48 kHz
frqgcd = gcd(44100,4800) = 300
fs1 / dfrq = sfrq / frqgcd = sfrq / gcd(sfrq,dfrq) = 44100/300 = 147
and 147%3=0 since 47 / 3 = 49 = integer</pre>
<p>The samplerate of your source clip can be found as follows</p>
<pre>AviSource(...)
Subtitle(string(c.AssumeFPS(23.976,sync_audio=true).AudioRate))</pre>
<p><b>Example:</b></p>
<pre># Downsampling to 44,1 kHz:
SSRC(44100)</pre>
<p><b>Changelog:</b></p>
<table border="1" width="100%">
  <tr>
    <td width="9%"> v2.54</td>
    <td width="91%"> Initial Release</td>
  </tr>
</table>
<p>Some parts of SSRC is: Copyright © 2001-2003, Peter Pawlowski. All rights reserved.</p>

<p><kbd>$Date: 2005/03/24 22:07:09 $</kbd></p>
<form>
  <p><input TYPE="Button" VALUE="Back"
onClick="history.go(-1)"></p>
</form>

</body>
</html>
