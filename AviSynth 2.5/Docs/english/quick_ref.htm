<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
<!--
Not automatically generated, has been changed:
$Id: quick_ref.htm,v 1.35 2005/09/04 15:21:10 wilbertd Exp $ 
-->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="Keywords" content="Avisynth filter reference">
<meta name="Description" content="Avisynth filter reference">
<title>Avisynth 2 Quick Command Reference</title>
<link rel="stylesheet" type="text/css" href="../avisynth.css">
</head>
<body>
<b><u>Abbreviations:</u></b> 
<p>Named arguments are written as "arg" and are always optional, non-named optional 
  arguments are placed into [] brackets. <br>
  The types of the non-clip-arguments can be <var>int</var> (integer), <var>float</var>, <var>string</var> or <var>bool</var>. 
  <br>
  <em>[yuy2]</em> etc. denotes the color formats the filter can deal with. See 
  <a href="corefilters/convert.htm">colorspace conversion filters</a> for more 
  details.<br>
  <em>[16 bit, float]</em> etc, denotes the sample types which are supported by 
  the audio filter. &quot;float&quot; is the most accurate one. <br>
  <em>[v 2.53]</em> denotes the version of AviSynth (above 2.01) since the filter 
  is available, or the last changes in the filter. <br>
<hr>
<h1> Alphabetic view</h1>
<a href="#A">[A]</a>
<a href="#B">[B]</a>
<a href="#C">[C]</a>
<a href="#D">[D]</a>
<a href="#E">[E]</a>
<a href="#F">[F]</a>
<a href="#G">[G]</a>
<a href="#H">[H]</a>
<a href="#I">[I]</a>
 [J]
<a href="#K">[K]</a>
<a href="#L">[L]</a>
<a href="#M">[M]</a>
<a href="#N">[N]</a>
<a href="#O">[O]</a>
<a href="#P">[P]</a>
 [Q]
<a href="#R">[R]</a>
<a href="#S">[S]</a>
<a href="#T">[T]</a>
 [U]
<a href="#V">[V]</a>
<a href="#W">[W]</a>
 [X] [Y] [Z]
<p><a name="A"></a><a href="corefilters/addborders.htm">AddBorders</a> <em>[yv12] [yuy2] [rgb32] [rgb24]</em> </p>
<ul>
  <li> <code>AddBorders</code> (<var>clip, int left, int top, int right, int bottom, 
    int &quot;color&quot;</var>)</li>
</ul>
<a href="corefilters/amplify.htm">Amplify / AmplifydB</a> <em>[16 bit, float]</em> 
<ul>
  <li> <code>Amplify </code>(<var>clip, float amount1 [, ...]</var>)</li>
  <li> <code>AmplifydB </code>(<var>clip, float amount1 [, ...]</var>)</li>
</ul>
<a href="corefilters/animate.htm">Animate 
/ ApplyRange</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24]</em> 
<ul>
  <li> <code>Animate </code>(<var>clip, int start_frame, int end_frame, string filtername, 
    start_args, end_args</var>)</li>
  <li> <code>ApplyRange </code>(<var>clip, int start_frame, int end_frame, string filtername, 
    args</var>)<em> [v 2.51]</em></li>
</ul>
<a href="corefilters/parity.htm#assumeframefield">AssumeFrameBased / AssumeFieldBased</a> <em>[yv12] [yuy2] [rgb32] [rgb24]</em> 
<ul>
  <li> <code>AssumeFrameBased </code>(<var>clip</var>)</li>
  <li> <code>AssumeFieldBased </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/parity.htm#assumefieldfirst">AssumeBFF / AssumeTFF</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24]</em> 
<ul>
  <li> <code>AssumeBFF </code>(<var>clip</var>)</li>
  <li> <code>AssumeTFF </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/assumerate.htm">AssumeSampleRate</a> <em>[all]</em> 
<ul>
  <li> <code>AssumeSampleRate </code>(<var>clip, int samplerate</var>)</li>
</ul>


<a href="corefilters/fps.htm">AssumeScaledFPS</a>  <em>[yv12] [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>AssumeScaledFPS </code>(<var>clip, int "multiplier", int "divisor", bool "sync_audio"</var>)<em>[v 2.56]</em></li>
</ul>


<a href="corefilters/audiodub.htm">AudioDub / AudioDubEx</a> <em>[all] </em>
<ul>
  <li> <code>AudioDub </code>(<var>video_clip, audio_clip</var>)</li>
  <li> <code>AudioDubEx </code>(<var>video_clip, audio_clip</var>) <em>[v 2.56]</em></li>
</ul>
<a href="corefilters/avisource.htm">AVISource / OpenDMLSource / AVIFileSource 
/ WAVSource</a> 
<ul>
  <li> <code>AVISource </code>(<var>string filename [, ...], bool "audio", string
    &quot;pixel_type&quot; [, string fourCC]</var>)</li>
  <li> <code>OpenDMLSource </code>(<var>string filename [, ...], bool "audio", string
    &quot;pixel_type&quot; [, string fourCC])</var></li>
  <li> <code>AVIFileSource </code>(<var>string filename [, ...], bool "audio", string 
    "pixel_type&quot; [, string fourCC]</var>)</li>
  <li> <code>WAVSource </code>(<var>string filename [, ...]</var>)</li>
</ul>
<a name="B"></a><a href="corefilters/blankclip.htm">BlankClip / Blackness</a> <em>[yv12] [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>BlankClip </code>(<var>clip clip, int "length", int "width", int "height", 
    string "pixel_type", float "fps", int "fps_denominator",<br>
    &nbsp;&nbsp;&nbsp;
     int "audio_rate", 
    bool "stereo", bool "sixteen_bit", int "color", int &quot;color_yuv&quot;</var>)</li>
  <li> <code>Blackness </code>(<var>clip clip, int &quot;length&quot;, int
    &quot;width&quot;, int &quot;height&quot;, string &quot;pixel_type&quot;,
    float &quot;fps&quot;, int &quot;fps_denominator&quot;,<br>
    &nbsp;&nbsp;&nbsp; int &quot;audio_rate&quot;, bool &quot;stereo&quot;, bool
    &quot;sixteen_bit&quot;, int &quot;color&quot;, int &quot;color_yuv&quot;</var>)</li>
</ul>
<a href="corefilters/blur.htm">Blur / Sharpen</a> <em>[yv12] [yuy2] 
[rgb32] [rgb24] </em> 
<ul>
  <li> <code>Blur </code>(<var>clip, float amount</var>)</li>
  <li> <code>Blur </code>(<var>clip, float amountH, float amountV</var>)</li>
  <li> <code>Sharpen </code>(<var>clip, float amount</var>)</li>
  <li> <code>Sharpen </code>(<var>clip, float amountH, float amountV</var>)</li>
</ul>
<a href="corefilters/bob.htm">Bob</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Bob </code>(<var>clip, float "b", float "c", float "height"</var>)</li>
</ul>
<a name="C"></a><a href="corefilters/colorbars.htm">ColorBars</a> <em>[rgb32] [yuy2] [yv12]</em>
<ul>
  <li> <code>ColorBars </code>(<var>int &quot;width&quot;, int &quot;height&quot;,
    string &quot;pixel_type&quot;</var>)</li>
</ul>
<a href="corefilters/coloryuv.htm">ColorYUV</a> <em>[yv12] 
[yuy2] </em>
<ul>
  <li> <var>ColorYUV (clip, float "gain_y", float "off_y", float "gamma_y", 
    float "cont_y", float "gain_u", float "off_u", float "gamma_u",<br>
    &nbsp;&nbsp;&nbsp;
     float "cont_u", 
    float "gain_v", float "off_v", float "gamma_v", float "cont_v",<br>
    &nbsp;&nbsp;&nbsp;string "levels", 
    string "opt", bool "showyuv", bool "analyze", bool "autowhite", bool "autogain"</var>) <em>[v 2.50]</em></li>
</ul>
<a href="corefilters/parity.htm#complementparity">ComplementParity</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>ComplementParity </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/compare.htm">Compare</a> <em>[yuy2] 
[rgb32] [rgb24] </em>
<ul>
  <li> <code>Compare </code>(<var>clip_filtered, clip_original, string "channels", string 
    "logfile", bool "show_graph"</var>)</li>
</ul>
<a href="corefilters/conditionalfilter.htm">ConditionalFilter / FrameEvaluate 
/ ScriptClip</a>  / <a href="corefilters/conditionalreader.htm">ConditionalReader</a> 
<em>[yv12] [yuy2] </em> 
<ul>
  <li> <code>ConditionalFilter </code>(<var>clip testclip, clip source1, clip source2, 
    string filter, string operator, string value, bool &quot;show&quot;</var>) <em>[v 2.52]</em></li>
  <li> <code>FrameEvaluate </code>(<var>clip clip, script function, bool "after_frame"</var>) <em>[v
    2.52]</em></li>
  <li> <code>ScriptClip </code>(<var>clip clip, string function, bool ''show'</var>'<var>, bool "after_frame"</var>) <em>[v
    2.52]</em></li>
  <li> <code>ConditionalReader </code>(<var>clip clip, string filename, string 
    variablename, bool &quot;show&quot;</var>) <em>[v 2.54]</em></li>
</ul>
<a href="corefilters/convert.htm">ConvertBackToYUY2 / ConvertToRGB / ConvertToRGB24 
/ ConvertToRGB32 / ConvertToYUY2 / ConvertToYV12</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>ConvertToBackYUY2 </code>(<var>clip, string &quot;matrix&quot;, bool "interlaced"</var>)</li>
  <li> <code>ConvertToRGB </code>(<var>clip, string &quot;matrix&quot;, bool "interlaced"</var>)</li>
  <li> <code>ConvertToRGB24 </code>(<var>clip, string &quot;matrix&quot;, bool "interlaced"</var>)</li>
  <li><code> ConvertToRGB32 </code>(<var>clip, string &quot;matrix&quot;, bool "interlaced"</var>)</li>
  <li> <code>ConvertToYUY2 </code>(<var>clip, string &quot;matrix&quot;, bool "interlaced"</var>)</li>
  <li> <code>ConvertToYV12 </code>(<var>clip, string &quot;matrix&quot;, bool "interlaced"</var>) <em>[v
    2.50]</em></li>
</ul>
<a href="corefilters/convertaudio.htm">ConvertAudioTo8bit / ConvertAudioTo16bit 
/ ConvertAudioTo24bit / ConvertAudioTo32bit / ConvertAudioToFloat</a> <em>[all] </em>
<ul>
  <li> <code>ConvertAudioTo8bit </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
  <li> <code>ConvertAudioTo16bit </code>(<var>clip</var>)</li>
  <li> <code>ConvertAudioTo24bit </code>(<var>clip</var>) 
    <em>[v 2.53]</em></li>
  <li> <code>ConvertAudioTo32bit </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
  <li> <code>ConvertAudioToFloat </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
</ul>
<a href="corefilters/converttomono.htm">ConvertToMono</a> <em>[16 
bit, float] </em>
<ul>
  <li> <code>ConvertToMono </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/crop.htm">Crop / CropBottom</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Crop </code>(<var>clip, int left, int top, int width, int height, bool &quot;align&quot;</var>)</li>
  <li> <code>Crop </code>(<var>clip, int left, int top, int -right, int -bottom, bool 
    &quot;align&quot;</var>)</li>
  <li> <code>CropBottom </code>(<var>clip, int count,&nbsp; bool &quot;align&quot;</var>)</li>
</ul>
<a name="D"></a><a href="corefilters/delayaudio.htm">DelayAudio</a> <em>[all] </em>
<ul>
  <li> <code>DelayAudio </code>(<var>clip, float seconds</var>)</li>
</ul>
<a href="corefilters/deleteframe.htm">DeleteFrame</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>DeleteFrame </code>(<var>clip, int frame</var>)</li>
</ul>
<a href="corefilters/directshowsource.htm">DirectShowSource</a> 
<ul>
  <li> <code>DirectShowSource </code>(<var>string filename, float "fps", bool &quot;seek&quot;, 
    bool &quot;audio&quot;, bool &quot;video&quot;, bool &quot;convertfps&quot;,
    bool &quot;seekzero&quot;, int &quot;timeout&quot;, string &quot;pixel_type&quot;</var>)</li>
</ul>
<a href="corefilters/dissolve.htm">Dissolve</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Dissolve </code>(<var>clip1, clip2 [, ...], int overlap, float "fps"</var>)</li>
</ul>
<a href="corefilters/doubleweave.htm">DoubleWeave</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>DoubleWeave </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/duplicateframe.htm">DuplicateFrame</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>DuplicateFrame </code>(<var>clip, int frame</var>)</li>
</ul>
<a name="E"></a><a href="corefilters/ensuresync.htm">EnsureVBRMP3Sync</a> <em>[all] </em>
<ul>
  <li> <code>EnsureVBRMP3Sync </code>(<var>clip</var>)</li>
</ul>
<a name="F"></a><a href="corefilters/fade.htm">FadeIn0 / FadeIO0 / FadeOut0<br>
FadeIn / FadeIO / FadeOut<br>
FadeIn2 / FadeIO2/ FadeOut2</a> <em>[yv12] [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>FadeIn0  </code>(<var>clip, int frames, int "color", float "fps"</var>)
    <em>[v 2.56]</em></li>
  <li> <code>FadeIn   </code>(<var>clip, int frames, int "color", float "fps"</var>)</li>
  <li> <code>FadeIn2  </code>(<var>clip, int frames, int "color", float "fps"</var>)</li>
  <li> <code>FadeIO0  </code>(<var>clip, int frames, int "color", float "fps"</var>)
    <em>[v 2.56]</em></li>
  <li> <code>FadeIO   </code>(<var>clip, int frames, int "color", float "fps"</var>)</li>
  <li> <code>FadeIO2  </code>(<var>clip, int frames, int "color", float "fps"</var>)</li>
  <li> <code>FadeOut0 </code>(<var>clip, int frames, int "color", float "fps"</var>)
    <em>[v 2.56]</em></li>
  <li> <code>FadeOut  </code>(<var>clip, int frames, int "color", float "fps"</var>)</li>
  <li> <code>FadeOut2 </code>(<var>clip, int frames, int "color", float "fps"</var>)</li>
</ul>
<a href="corefilters/fixbrokenchromaupsampling.htm">FixBrokenChromaUpsampling</a> <em>[yuy2] </em>
<ul>
  <li> <code>FixBrokenChromaUpsampling </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/fixluminance.htm">FixLuminance</a> <em>[yuy2] </em>
<ul>
  <li> <code>FixLuminance </code>(<var>clip, int intercept, int slope</var>)</li>
</ul>
<a href="corefilters/flip.htm">FlipHorizontal / FlipVertical</a> <em>[yv12] [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>FlipHorizontal </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
  <li> <code>FlipVertical </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/fps.htm">AssumeFPS / ChangeFPS / ConvertFPS</a>  <em>[yv12]
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>AssumeFPS </code>(<var>clip, int numerator , int denominator, bool "sync_audio"</var>)</li>
  <li><code> AssumeFPS </code>(<var>clip, float fps, bool "sync_audio"</var>)</li>
  <li><code> AssumeFPS </code> (<var>clip1, clip2, bool &quot;sync_audio&quot;</var>)
    <em>[v 2.55]</em></li>
  <li> <code>ChangeFPS </code>(<var>clip, int numerator , int denominator, bool &quot;linear&quot;</var>) <em>[v 2.50]</em></li>
  <li> <code>ChangeFPS </code>(<var>clip, float fps, bool &quot;linear&quot;</var>) <em>[v 2.50]</em></li>
  <li> <code>ChangeFPS </code>(<var>clip1, clip2, bool &quot;linear&quot;</var>) <em>[v
    2.56]</em></li>
  <li> <code>ConvertFPS </code>(<var>clip, float new_fps, int "zone", int "vbi"</var>)
    <em>[yuy2] </em>
  <li> <code>ConvertFPS </code>(<var>clip, int numerator, int denominator, int "zone", int "vbi"</var>)
    <em>[yuy2] </em>
  </li>
  <li> <code>ConvertFPS </code>(<var>clip1, clip2, int "zone", int "vbi"</var>) <em>[v
    2.56] [yuy2]</em></li>
</ul>
<a href="corefilters/freezeframe.htm">FreezeFrame</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>FreezeFrame </code>(<var>clip, int first_frame, int last_frame, int source_frame</var>)</li>
</ul>
<a name="G"></a><a href="corefilters/convolution.htm">GeneralConvolution</a> <em>[rgb32] </em>
<ul>
  <li> <code>GeneralConvolution </code>(<var>clip, int &quot;bias&quot;, string &quot;matrix&quot;, float &quot;divisor&quot;, bool &quot;auto&quot;</var>)
    <em>[v 2.55]</em></li>
</ul>
<a href="corefilters/getchannel.htm">GetChannel</a> <em>[all] </em>
<ul>
  <li> <code>GetChannel </code>(<var>clip, int ch1 [, int ch2, ...]</var>) <em>[v 2.50]</em></li>
  <li><code>GetChannels </code>(<var>clip, int ch1 [, int ch2, ...]</var>) <em>[v 2.50]</em></li>
</ul>
<a href="corefilters/greyscale.htm">Greyscale</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Greyscale </code>(<var>clip, string &quot;matrix&quot;</var>)</li>
</ul>
<a name="H"></a><a href="corefilters/Histogram.htm">Histogram</a> <em>[yv12] 
[yuy2] </em>
<ul>
  <li> <code>Histogram </code>(<var>clip, string ''mode''</var>) <em>[v 2.54]</em></li>
</ul>
<a name="I" href="corefilters/imagesource.htm">ImageReader / ImageSource</a> / <a href="corefilters/imagewriter.htm"> ImageWriter</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>ImageReader </code>(<var>string &quot;path&quot;, int
    &quot;start&quot;, int &quot;end&quot;, float &quot;fps&quot;, bool 
    "use_DevIL", bool &quot;info&quot;, string "pixel_type"</var>) <em>[v 
    2.52]</em></li>
  <li> <code>ImageSource </code>(<var>string &quot;path&quot;, int
    &quot;start&quot;, int &quot;end&quot;, float &quot;fps&quot;, bool 
    "use_DevIL", bool &quot;info&quot;, string "pixel_type"</var>) <em>[v
    2.55]</em></li>
  <li> <code>ImageWriter </code>(<var>clip, string "path", int
    &quot;start&quot;, int "end", string
    &quot;type&quot;, bool &quot;info&quot;</var>) <em>[v 2.52]</em></li>
</ul>
<a href="corefilters/info.htm">Info</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Info </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
</ul>
<a href="corefilters/interleave.htm">Interleave</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Interleave </code>(<var>clip1, clip2 [, ...]</var>)</li>
</ul>
<a href="corefilters/invert.htm">Invert</a>  <em>[yv12, v2.55] [yuy2, v2.55]
[rgb32] [rgb24, v2.55]</em>
<ul>
  <li> <code>Invert </code>(<var>clip, string "channels"</var>) <em>[v2.53]</em></li>
</ul>
<a name="K"></a><a href="corefilters/killaudio.htm">KillAudio</a> <em>[all] </em>
<ul>
  <li> <code>KillAudio </code>(<var>clip</var>)</li>
</ul>
<a name="L"></a><a href="corefilters/layer.htm">Layer / Mask / ResetMask / ColorKeyMask</a> <em>[RGB32] </em>
<ul>
  <li> <code>Layer </code>(<var>clip, layer_clip, string "op", int "level", int "x", 
    int "y", int "threshold", bool "use_chroma"</var>) <em>[yuy2] [rgb32]</em></li>
  <li> <code>Mask </code>(<var>clip, mask_clip</var>) 
    <em>[rgb32]</em></li>
  <li> <code>ResetMask </code>(<var>clip</var>) 
    <em>[rgb32]</em></li>
  <li> <code>ColorKeyMask </code>(<var>clip, int &quot;color&quot;, int &quot;tolerance&quot;</var>)<em> [rgb32]</em></li>
</ul>
<p align="left"> <a href="corefilters/letterbox.htm">Letterbox</a> <em>[yv12] 
  [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Letterbox </code>(<var>clip, int top, int bottom [, int left, int right]</var>)</li>
</ul>
<a href="corefilters/levels.htm">Levels</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Levels </code>(<var>clip, int input_low, float gamma, int input_high, int 
    output_low, int output_high, bool "coring"</var>)</li>
</ul>
<a href="corefilters/limiter.htm">Limiter</a> <em>[yv12] 
[yuy2] </em>
<ul>
  <li> <code>Limiter </code>(<var>clip, int &quot;min_luma&quot;, int
    &quot;max_luma&quot;, int &quot;min_chroma&quot;, 
    int &quot;max_chroma&quot; [, string show]</var>)<em> 
    [v 2.50]</em></li>
</ul>
<a href="corefilters/loop.htm">Loop</a> <em>[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Loop </code>(<var>clip, int "times", int "start", int "end"</var>)</li>
</ul>
<a name="M"></a><a href="corefilters/mergergb.htm">MergeARGB / MergeRGB</a> <em>[yv12,
yuy2, rgb32, rgb24] [2.56] </em>
<ul>
  <li> <code>MergeARGB </code>(<var>clipA, clipR, clipG, clipB</var>)</li>
  <li> <code>MergeRGB </code>(<var>clipR, clipG, clipB [, string "pixel_type"]</var>)</li>
</ul>
<a href="corefilters/mergechannels.htm">MergeChannels</a> <em>[all] </em>
<ul>
  <li> <code>MergeChannels </code>(<var>clip1, clip2 [, ...]</var>)<em> [v 2.50]</em></li>
</ul>
<a href="corefilters/merge.htm">Merge / MergeChroma / MergeLuma</a> <em>[yv12] 
[yuy2] </em>
<ul>
  <li> <code>Merge       </code>(<var>clip1, clip2, float &quot;weight&quot;</var>) &nbsp;
    <em>[yv12, yuy2, rgb32, rgb24] [2.56] </em>
  </li>
  <li> <code>MergeChroma </code>(<var>clip1, clip2, float &quot;weight&quot;</var>)</li>
  <li> <code>MergeLuma </code>(<var>clip1, clip2, float &quot;weight&quot;</var>)</li>
</ul>
<a href="corefilters/message.htm">MessageClip</a> <em>[rgb32] </em>
<ul>
  <li> <code>MessageClip </code>(<var>string message, int "width", int "height", bool 
    "shrink", int "text_color", int "halo_color", int "bg_color"</var>)</li>
</ul>
<a href="corefilters/mixaudio.htm">MixAudio</a> <em>[16 
bit, float] </em>
<ul>
  <li> <code>MixAudio </code>(<var>clip1, clip 2, float clip1_factor, float "clip2_factor"</var>)</li>
</ul>
<a name="N"></a><a href="corefilters/normalize.htm">Normalize</a> <em>[16 
bit, float] </em>
<ul>
  <li> <code>Normalize </code>(<var>clip, float "volume", bool "show"</var>)</li>
</ul>
<a name="O"></a><a href="corefilters/overlay.htm">Overlay</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Overlay </code>(<var>clip, clip overlay, int &quot;x&quot;, int
    &quot;y&quot;, 
    clip &quot;mask&quot;, float &quot;opacity&quot;, string &quot;mode&quot;, bool
    &quot;greymask&quot;,<br>
    &nbsp;&nbsp;&nbsp;string &quot;output&quot;, bool
    &quot;ignore_conditional&quot;, bool &quot;pc_range&quot;</var>) <em>[v 2.54]</em></li>
</ul>
<a name="P"></a><a href="corefilters/peculiar.htm">PeculiarBlend</a> <em>[yuy2] </em>
<ul>
  <li> <code>PeculiarBlend </code>(<var>clip, int cutoff</var>)</li>
</ul>
<a href="corefilters/pulldown.htm">Pulldown</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Pulldown </code>(<var>clip, int a , int b</var>)</li>
</ul>
<a name="R"></a><a href="corefilters/adjust.htm">RGBAdjust</a> <em>[rgb32] [rgb24] </em>
<ul>
  <li> <code>RGBAdjust </code>(<var>clip,
  float &quot;r&quot;,  float &quot;g&quot;,  float &quot;b&quot;,  float &quot;a&quot;,
  float &quot;rb&quot;, float &quot;gb&quot;, float &quot;bb&quot;, float &quot;ab&quot;,
  float &quot;rg&quot;, float &quot;gg&quot;, float &quot;bg&quot;, float &quot;ag&quot;,
  bool &quot;analyze&quot;</var>)</li>
</ul>
<a href="corefilters/reduceby2.htm">ReduceBy2 / HorizontalReduceBy2 / VerticalReduceBy2</a> <em>[yv12] [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>HorizontalReduceBy2 </code>(<var>clip</var>)</li>
  <li> <code>VerticalReduceBy2 </code>(<var>clip</var>)</li>
  <li> <code>ReduceBy2 </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/resampleaudio.htm">ResampleAudio</a> <em>[16 
bit, float] </em>
<ul>
  <li> <code>ResampleAudio </code>(<var>clip, int new_rate_numberator [, int new_rate_denominator]</var>)</li>
</ul>
<a href="corefilters/resize.htm">BilinearResize / BicubicResize / LanczosResize 
/ Lanczos4Resize 
/ Spline16Resize / Spline36Resize / PointResize</a> <em>[yv12] [yuy2] 
[rgb32] [rgb24] </em> 
<ul>
  <li> <code>BilinearResize </code>(<var>clip, int target_width, int target_height</var>)</li>
  <li> <code>BilinearResize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height"</var>)</li>
  <li> <code>BicubicResize </code>(<var>clip, int target_width, int target_height, float 
    "b", float "c"</var>)</li>
  <li> <code>BicubicResize </code>(<var>clip, int target_width, int target_height, float 
    "b", float "c", float "src_left", float "src_top", float "src_width", float 
    "src_height"</var>)</li>
  <li> <code>LanczosResize </code>(<var>clip, int target_width, int target_height,
    int &quot;taps&quot;</var>)</li>
  <li> <code>LanczosResize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height", int
    &quot;taps&quot;</var>)</li>
  <li> <code>Lanczos4Resize </code>(<var>clip, int target_width, int target_height</var>) <em>[v
    2.55]</em></li>
  <li> <code>Lanczos4Resize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height"</var>) <em>[v
    2.55]</em></li>
  <li> <code>Spline16Resize </code>(<var>clip, int target_width, int target_height</var>) <em>[v
    2.56]</em></li>
  <li> <code>Spline16Resize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height"</var>) <em>[v
    2.56]</em></li>
  <li> <code>Spline36Resize </code>(<var>clip, int target_width, int target_height</var>) <em>[v
    2.56]</em></li>
  <li> <code>Spline36Resize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height"</var>) <em>[v
    2.56]</em></li>
  <li> <code>GaussResize </code>(<var>clip, int target_width, int target_height,
    float &quot;p&quot;</var>) <em>[v
    2.56]</em></li>
  <li> <code>GaussResize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height", float
    &quot;p&quot;</var>) <em>[v
    2.56]</em></li>
  <li> <code>PointResize </code>(<var>clip, int target_width, int target_height</var>)</li>
  <li> <code>PointResize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float "src_width", float "src_height"</var>)</li>
  <li> all resizers: <code>xxxResize </code>(<var>clip, int target_width, int target_height, float 
    "src_left", float "src_top", float -&quot;src_right&quot;, float
    -&quot;src_bottom&quot;</var>) <em>[v
    2.56]</em></li>
</ul>
<a href="corefilters/reverse.htm">Reverse</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Reverse </code>(<var>clip</var>)</li>
</ul>
<a name="S"></a><a href="corefilters/segmentedsource.htm">SegmentedAVISource / SegmentedDirectShowSource</a> 
<ul>
  <li> <code>SegmentedAVISource </code>(<var>string base_filename [, ...], bool "audio"</var>)</li>
  <li> <code>SegmentedDirectShowSource </code>(<var>string base_filename [, ...]&nbsp; 
    [, fps]</var>)</li>
</ul>
<a href="corefilters/select.htm">SelectEven / SelectOdd</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>SelectEven </code>(<var>clip</var>)</li>
  <li> <code>SelectOdd </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/selectevery.htm">SelectEvery</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>SelectEvery </code>(<var>clip, int step_size, int offset1 [, int offset2 
    [, ...]]</var>)</li>
</ul>
<a href="corefilters/selectrangeevery.htm">SelectRangeEvery</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>SelectRangeEvery </code>(<var>clip, int every, int length, int
    &quot;offset&quot;, bool &quot;audio''</var>) 
    <em>[v2.50]</em></li>
</ul>
<a href="corefilters/separatefields.htm">SeparateFields</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>SeparateFields </code>(<var>clip</var>)</li>
</ul>
<a href="corefilters/showalpha.htm">ShowAlpha</a> <em>[rgb32] </em>
<ul>
  <li> <code>ShowAlpha </code>(<var>clip, string &quot;pixel_type&quot;</var>) 
    <em>[v2.54]</em></li>
</ul>
<a href="corefilters/showalpha.htm">ShowRed, ShowGreen, ShowBlue</a> <em>[rgb24] [rgb32] [v2.56]</em>
<ul>
  <li> <code>ShowRed   </code>(<var>clip, string &quot;pixel_type&quot;</var>) </li>
  <li> <code>ShowGreen </code>(<var>clip, string &quot;pixel_type&quot;</var>) </li>
  <li> <code>ShowBlue  </code>(<var>clip, string &quot;pixel_type&quot;</var>) </li>
</ul>
<a href="corefilters/showfive.htm">ShowFiveVersions</a> 
<em> [yv12] [yuy2] [rgb32] [rgb24]</em>
<ul>
  <li> <code>ShowFiveVersions </code>(<var>clip1, clip2, clip3, clip4, clip5</var>)</li>
</ul>
<a href="corefilters/showframes.htm">ShowFrameNumber / ShowSMPTE</a> 
<em>[yv12] [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>ShowFrameNumber </code>(<var>clip, bool "scroll", int
    &quot;offset&quot;, int &quot;x&quot;, int &quot;y&quot;, string
    &quot;font&quot;, int &quot;size&quot;, int &quot;text_color&quot;, int
    &quot;halo_color&quot;</var>)</li>
  <li> <code>ShowSMPTE </code>(<var>clip,</var><var> float &quot;fps&quot;, string
    &quot;offset&quot;, int &quot;offset_f&quot;, int &quot;x&quot;, int &quot;y&quot;, string
    &quot;font&quot;, int &quot;size&quot;, int &quot;text_color&quot;, int
    &quot;halo_color&quot;</var>)</li>
</ul>
<a href="corefilters/soften.htm">SpatialSoften / TemporalSoften</a> <em>[yv12] [yuy2]
[rgb32, v2.56] </em>
<ul>
  <li> <code>SpatialSoften </code>(<var>clip, int radius, int luma_threshold, int chroma_threshold</var>)</li>
  <li> <code>TemporalSoften </code>(<var>clip, int radius, int luma_threshold, int chroma_threshold, 
    int "scenechange", int "mode"</var>)<em> [v2.50]</em></li>
</ul>
<a href="corefilters/splice.htm">AlignedSplice / UnalignedSplice</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>AlignedSplice </code>(<var>clip1, clip2 [, ...]</var>)</li>
  <li> <code>UnAlignedSplice </code>(<var>clip1, clip2 [, ...]</var>)</li>
</ul>
<a href="corefilters/ssrc.htm">SSRC</a> <em>[float] </em>
<ul>
  <li> <code>SSRC </code>(<var>clip, int samplerate, bool &quot;fast&quot;</var>) <em>[v 2.54]</em></li>
</ul>
<a href="corefilters/stack.htm">StackHorizontal / StackVertical</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>StackHorizontal </code>(<var>clip1, clip2 [, ...]</var>)</li>
  <li> <code>StackVertical </code>(<var>clip1, clip2 [, ...]</var>)</li>
</ul>
<a href="corefilters/subtitle.htm">Subtitle</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Subtitle </code>(<var>clip, string text, int "x", int "y", int "first_frame", 
    int "last_frame", string "font", int "size", int "text_color", int "halo_color"</var>)</li>
  <li> <code>Subtitle </code>(<var>clip, string "text"</var>)</li>
</ul>
<a href="corefilters/subtract.htm">Subtract</a>  <em> [yv12] [yuy2] [rgb32] [rgb24]</em>
<ul>
  <li> <code>Subtract </code>(<var>clip1, clip2</var>)</li>
</ul>
<a href="corefilters/supereq.htm">SuperEQ</a> <em>[float] </em>
<ul>
  <li> <code>SuperEQ </code>(<var>string filename</var>) <em>[v 2.54]</em></li>
</ul>
<a href="corefilters/swap.htm">SwapUV / UToY / VToY / YToUV</a> <em>[yv12] 
[yuy2, v2.53] </em>
<ul>
  <li> <code>SwapUV </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
  <li> <code>UToY </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
  <li> <code>VToY </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
  <li> <code>YToUV </code>(<var>clip</var>) 
    <em>[v 2.50]</em></li>
</ul>
<a href="corefilters/swapfields.htm">SwapFields</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>SwapFields </code>(<var>clip</var>)</li>
</ul>
<a name="T"></a><a href="corefilters/tcpdeliver.htm">TCPDeliver</a>
<ul>
  <li> <code>TCPServer</code> (<var>clip, int &quot;port&quot;</var>) <em>[v
    2.55]</em></li>
  <li> <code>TCPSource</code> (<var>string hostname, int &quot;port&quot;,
    string &quot;compression&quot;</var>) <em>[v
    2.55]</em></li>
</ul>
<a href="corefilters/timestretch.htm">TimeStretch</a> <em>[float] </em>
<ul>
  <li> <code>TimeStretch </code>(<var>clip, float &quot;tempo&quot;, float
    &quot;rate&quot;, float &quot;pitch&quot;</var>) <em>[v 2.55]</em></li>
</ul>
<a href="corefilters/tone.htm">Tone</a>  <em>[float] </em>
<ul>
  <li> <code>Tone </code>(<var>float &quot;length&quot;, float &quot;frequency&quot;, 
    int &quot;samplerate&quot;, int &quot;channels&quot;, string &quot;type&quot;,
    float &quot;level&quot;</var>) <em>[v 2.54] [v 2.56]</em></li>
</ul>
<p align="left"> <a href="corefilters/trim.htm">Trim</a> <em>[yv12] 
  [yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Trim </code>(<var>clip, int first_frame, int last_frame [, bool pad_audio]</var>) <em>[v 2.56]</em></li>
</ul>
<a href="corefilters/turn.htm">TurnLeft / TurnRight / Turn180</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>TurnLeft </code>(<var>clip</var>) 
    <em>[v 2.51]</em></li>
  <li> <code>TurnRight </code>(<var>clip</var>) 
    <em>[v 2.51]</em></li>
  <li> <code>Turn180 </code>(<var>clip</var>) 
    <em>[v 2.55]</em></li>
</ul>
<a href="corefilters/tweak.htm">Tweak</a> <em>[yv12] 
[yuy2] </em>
<ul>
  <li> <code>Tweak </code>(<var>clip, float "hue", float "sat", float "bright", float 
    "cont", bool "coring", bool &quot;sse&quot;</var>)</li>
</ul>
<a name="V"></a><a href="corefilters/version.htm">Version</a> <em>[rgb24] </em>
<ul>
  <li> <code>Version </code>()</li>
</ul>
<a name="W"></a><a href="corefilters/weave.htm">Weave</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
<ul>
  <li> <code>Weave </code>(<var>clip</var>)</li>
</ul>
<p><a href="corefilters/write.htm">WriteFile / WriteFileIf / WriteFileStart / WriteFileEnd</a> <em>[yv12] 
[yuy2] [rgb32] [rgb24] </em>
</p>
<ul>
  <li> 
    <p><code>WriteFile </code>(<var>clip, string filename, <i>string expression1, 
  ... , string expression16, bool &quot;append&quot;, bool &quot;flush&quot;</i></var>)
  </li>
  <li>
    <code>WriteFileIf </code>(<var>clip, string filename, <i>string expression1, 
  ... , string expression16, bool &quot;append&quot;, bool &quot;flush&quot;</i></var>)
  </li>
  <li>
    <code>WriteFileStart </code>(<var>clip, string filename, <i>string expression1, 
  ... , string expression16, bool &quot;append&quot;</i></var>)
  </li>
  <li>
    <code>WriteFileEnd </code>(<var>clip, string filename, <i>string expression1, 
  ... , string expression16, bool &quot;append&quot;</i></var>)</li>
</ul>
<a href="#A">[A]</a>
<a href="#B">[B]</a>
<a href="#C">[C]</a>
<a href="#D">[D]</a>
<a href="#E">[E]</a>
<a href="#F">[F]</a>
<a href="#G">[G]</a>
<a href="#H">[H]</a>
<a href="#I">[I]</a>
 [J]
<a href="#K">[K]</a>
<a href="#L">[L]</a>
<a href="#M">[M]</a>
<a href="#N">[N]</a>
<a href="#O">[O]</a>
<a href="#P">[P]</a>
 [Q]
<a href="#R">[R]</a>
<a href="#S">[S]</a>
<a href="#T">[T]</a>
 [U]
<a href="#V">[V]</a>
<a href="#W">[W]</a>
 [X] [Y] [Z]
<p><kbd>$Date: 2005/09/04 15:21:10 $</kbd></p>
</body>
</html>
