<!DOCTYPE htm PUBLIC "-//W3C//DTD Xhtm 1.0 Transitional//EN" "DTD/xhtm1-transitional.dtd"> 
<htm xmlns="http://www.w3.org/1999/xhtm" xml:lang="de" lang="de">
<head>
 <meta http-equiv="content-type" content="text/htm; charset=iso-8859-1" />
 <meta http-equiv="content-style-type" content="text/css" />
 <meta name="author" content="Arlsair" />
 <meta name="date" content="2004-01-22" />
 <title>PeachSmoother</title>
 <link rel="stylesheet" type="text/css" href="../../style.css" />
</head><body>
<h1>PeachSmoother</h1>

<h2>&Uuml;bersicht</h2>
<b>Autor:</b> Lindsey Dubb<br />
<b>Version:</b> 1.0c<br />
<b>Download:</b> <a href="http://www.avisynth.org/warpenterprises/" target="_blank">http://www.avisynth.org/warpenterprises/</a><br />
<b>Kategorie:</b> R&auml;umlich-Zeitlicher Weichzeichner<br />
<b>Anforderungen:</b> YUY2 Farbformat<br />
<hr size=2 width="100%" align=center>

<table cellSpacing="0" cellPadding="0" width="1163" border="0">
  <tbody>
    <tr>
      <td width="882"></td>
      <td vAlign="bottom" align="right" width="277"><font face="Verdana, Arial, Helvetica, sans-serif" size="5"><b><!-- #BeginEditable "Page%20Title" -->
        Peach Smoother <!-- #EndEditable -->
        </b></font></td>
    </tr>
    <tr>
      <td colSpan="2" width="1161"><!-- #BeginEditable "Text" -->
        <p>This is yet another filter which cleans up the picture, averaging out
        visual noise between and within frames.</p>
        <p>The Peach is designed to cope with the oddities of broadcast TV. It
        automatically fine tunes itself for good or poor quality signal and
        reception, and can even deal reasonably with some kinds of interference.
        It’s spiffy!</p>
        <p>The filter examines the image, infers the amount of noise in the
        picture, and uses that estimate to determine how to cancel the noise. To
        differentiate between noise and motion, the filter makes use of
        correlations within and between fields as well as local color
        differences. The degree of certainty about motion, noise, and detail is
        used to decide what mix of the previous, current, and nearby colors to
        show.</p>
        <p>To use the Peach, your computer will have to be able to run SSE
        instructions. In English, that means you will need to have a Pentium 3,
        Athlon, later Celeron, or any more recent processor.</p>
        <p>This filter works in the YUY2 colorspace. So if your clip is encoded
        as RGB colors, you’ll first need to process it with ConvertToYUY2().</p>
        <p>The Peach Smoother AVISynth filter was written by Lindsey Dubb,
        copyright 2002. If you have any questions, comments, problems, or
        suggestions, you are welcome to <a href="mailto:lindsey@alumni.caltech.edu">send
        me an email</a> or post to Doom9’s <a href="http://forum.doom9.org/forumdisplay.php?s=&amp;forumid=33">AVISynth
        Forum</a>.
        <hr>
        <p><b><font face="Arial" size="4">The Settings</font></b></p>
        <p><b><font face="Arial" color="#993300">NoiseReduction</font></b><br>
        <i>An integer from 1 to 200; 35 by default</i></p>
        <p>Sometimes the filter doesn’t know whether change in the picture
        comes from noise or motion. When that happens, there’s a
        tradeoff&nbsp;— Guess motion, and the picture will be noisier if you’re
        wrong. Guess noise, and a mistake will blur the movement.</p>
        <p>The <font color="#993300">NoiseReduction</font> setting lets you tell
        the filter how to make this tradeoff. Set it low, and the computer will
        play it safe, avoiding any parts of the image which might be in motion.
        Set it high, and noise will be greatly reduced&nbsp;— at the cost of
        blurring and loss of detail in slowly moving areas. This tradeoff is
        affected by the amount of noise&nbsp;— The more noise there is in the
        image, the more blurring will be necessary in order to reduce it.</p>
        <p>There’s no perfect way to choose this&nbsp;— Just try different
        values until it looks as nice as possible. Comedies and dramas are
        probably the best material for picking settings, since facial close-ups
        make any blurring really easy to see. (That’s because we’re
        especially good at seeing distortion in faces.)</p>
        <p>Remember that this filter automatically adjusts for the amount of
        noise in the picture. So once you have a setting you like, you can use
        it for both clean and noisy video.</p>
        <p>However, there are two kinds of video which deserve some special
        consideration: cartoons and sports. With cartoons, you can use a much
        higher <font color="#993300">NoiseReduction</font>, since animation
        tends to have less fine detail. And with sports (or any other show with
        constant motion), there is very little to gain from a noise filter, so
        you can just skip it.</p>
        <p>Before you fine tune this setting, make sure that the filter has been
        able to estimate the noise in your clip. To do so, make use of the <font color="#993300">Dot</font>,
        described below.</p>
        <p><b><font face="Arial" color="#993300">Stability</font></b><br>
        <i>An integer from -100 to 100; 20 by default</i></p>
        <p>This setting tells the filter how much to mix colors when it is
        uncertain about whether there is motion. To preserve a small amount of
        noise throughout the picture, decrease this setting. To get a really
        solid looking picture, use a higher value. Don’t set it too high,
        though, or you’ll get posterization.</p>
        <p>Regardless of your <font color="#993300">Stability</font> setting,
        the filter will always preserve a certain amount of variation in order
        to maintain the color depth of the original image.</p>
        <p><b><font face="Arial" color="#993300">DoSpatial</font></b><br>
        <i>A boolean; TRUE by default</i></p>
        <p>This setting decides whether you want the filter to use spatial
        smoothing. It’s a very subtle smoother, and is used mostly in low
        contrast, moving parts of the picture. The filter is somewhat faster
        when spatial filtering is turned off.</p>
        <p><b><font face="Arial" color="#993300">Spatial</font></b><br>
        <i>An integer from 0 to 400; 100 by default</i></p>
        <p>This determines how much spatial smoothing to use. It’s measured in
        percent, relative to the amount of temporal smoothing. But the Peach
        prefers to use temporal smoothing whenever possible, so the spatial
        smoothing only kicks in when temporal smoothing fails.</p>
        <p><b><font face="Arial" color="#993300">Dot</font></b><br>
        <i>A boolean; FALSE by default</i></p>
        <p>It’s... a small green dot!</p>
        <p>With this option, a tiny green dot will appear when the filter’s
        estimate of the noise is confirmed by the current picture. It will show
        up near the upper left of the screen&nbsp;— specifically 16 down and
        16 across from the upper left corner. The dot is an indication that the
        filter has settled on a noise value. In general, it will turn off when
        all of the picture is in rapid motion&nbsp;— When there’s too much
        motion, the filter tends not to believe the current estimate. In that
        case, the filter makes do by weighting previous good values.</p>
        <p>If the picture is constantly in motion, it’ll take a while before
        the filter can figure out the noise level. Interference also tends to
        make noise estimation take longer&nbsp;— The estimation time depends
        on the kind and amount of the interference.</p>
        <p><b><font face="Arial" color="#993300">Readout</font></b><br>
        <i>A boolean; FALSE by default</i></p>
        <p>To help decide how much to smooth, this filter measures the noise in
        the video. When you enable <font color="#993300">Readout</font>, these
        measurements will be shown in the output.</p>
        <p>You will see two numbers. The first one is a measurement of the mean
        noise level. The second is a measure of the lowest amount of noise seen
        anywhere in the picture. That provides some idea about how much noise
        varies in the video. These estimates will adjust as the video
        progresses.</p>
        <p>The numbers are measured as the expected absolute change in a single
        pixel (counting both chroma and luma) between two adjacent frames.</p>
        <p>This provides an objective measurement of noise. It is also the way
        to figure out values for the <font color="#993300">NoiseLevel</font> and
        <font color="#993300">Baseline</font> options, described below.</p>
        <p><b><font face="Arial" color="#993300">NoiseLevel and Baseline</font></b><br>
        <i>Two settings&nbsp;— each is a floating point number from 0.0 to
        100.0; Unused by default</i></p>
        <p>Rather than estimate the noise level, you can tell the Peach exactly
        how much noise there is in the picture.</p>
        <p>To do so, choose values for both <font color="#993300">NoiseLevel</font>
        and <font color="#993300">Baseline</font>. To get these values, use the <font color="#993300">Readout</font>
        option, described above. Note that <font color="#993300">Baseline</font>
        should never be more than <font color="#993300">NoiseLevel</font>.</p>
        <p>Why would you want to specify these numbers? Because the Peach can
        take a while to figure out the amount of noise. And on rare occasions it
        can be badly mislead. (This is usually caused by scenes with smoke and
        dust clouds, which the Peach can mistakenly identify as noise.) By
        specifying the noise values, the estimate will never waver. Skipping
        noise estimation also makes things run a little faster.</p>
        <p>On the other hand, some video really does have changing amounts of
        noise. In that case, you’ll be much better off with the Peach’s
        usual noise detection.</p>
        <p><b><font face="Arial" color="#993300">ShowMotion</font></b><br>
        <i>A boolean; FALSE by default</i></p>
        <p>This is another obscure diagnostic. When this is turned on, the
        filter will interleave its estimate of whether motion is occuring. White
        areas are definitely motion, black areas are definitely stationary. Gray
        areas are gray areas.</p>
        <p><b><font face="Arial" color="#993300">Debug</font></b><br>
        <i>A boolean; FALSE by default</i></p>
        <p>This option is only meant for the stout of heart. For an explanation
        of its output, see the comments toward the bottom of <a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/deinterlace/DScaler/Plugins/FLT_AdaptiveNoise/">FLT_AdaptiveNoise.c
        </a>.</p>
        <hr>
        <p><b><font face="Arial" size="4">About the Peach</font></b></p>
        <p><b><font face="Arial">How much noise reduction should I use?</font></b></p>
        <p>Let your eyes be the judge. I like to keep the settings pretty
        low&nbsp;— Blurred faces look worse than a little static.</p>
        <p>Surprisingly, small amounts of color variation can sometimes improve
        an image. By switching back and forth between colors, the picture is
        able to give the impression of a color somewhere in between them. Also,
        noise can break up artifactual patterns in the picture, making it easier
        for you to ignore the errors.</p>
        <p>With that in mind, the Peach tries to preserve a small amount of
        color variation. As a result, it will never give you a completely stable
        picture. This is probably bad for compression, but it does improve
        picture quality.</p>
        <p><b><font face="Arial">I’m seeing lots of blurring in early parts of
        my constant motion (or very dark) video. What should I do to improve the
        results?</font></b></p>
        <p>If you’re seeing lots of blurring, try using the <font color="#993300">Dot</font>
        option. If the green dot doesn’t show up, then the problem is that the
        Peach wasn’t able to figure out how much noise there was.</p>
        <p>There are a couple ways to solve this. The best is to turn on the <font color="#993300">Readout</font>
        option, and watch a later part of the video where the picture is still.
        Make a note of the <font color="#993300">NoiseLevel</font> and <font color="#993300">Baseline</font>
        from that stationary part. Then specify them in your command, and the
        whole sequence should look fine.</p>
        <p>If your video doesn’t have any stationary parts, then you should
        just skip this filter. A temporal smoother isn’t going to do much good
        for pure high motion material.</p>
        <p>Another way to solve this problem is to put some still video (from
        the same clip) at the beginning of the sequence. That will allow the
        Peach to estimate the noise before the fast stuff shows up.</p>
        <p><b><font face="Arial">The picture looks a little soft. Is there
        anything I can do about that?</font></b></p>
        <p>Try reducing the <font color="#993300">Stability</font> setting.</p>
        <hr>
        <p><b><font face="Arial" size="4">Noise in General</font></b></p>
        <p><b><font face="Arial">What’s the best way to get rid of noise?</font></b></p>
        <p>Make sure you have a good signal. Noise can come from cable jumbles,
        poor connections, poor power and grounding, poorly designed video input
        cards, electrical gadgets (anything from a dimmer switch to various
        computer components) or from a bad video source. These issues are all
        beyond the scope of this help file. I’d suggest a look at the <a href="http://www.avsforum.com/">AV
        Science Forum </a>’s Home Theater Computers FAQ and board, where these
        topics are discussed at length.</p>
        <p><b><font face="Arial">Should I use a noise filter?</font></b></p>
        <p>It depends what you’re watching. Sports and nature shows in
        general&nbsp;— really anything with lots of moving low contrast
        texture&nbsp;— are not handled well by temporal smoothers. That’s
        because those textures look a lot like noise.</p>
        <p>The Peach does well with difficult material, disabling itself where
        it detects motion. It causes surprisingly few problems with field sports
        so long as the background noise isn’t too bad. But it isn’t
        perfect&nbsp;— Road races are especially prone to blurring. When that
        happens, it’s best to skip any temporal smoothers.</p>
        <p>Otherwise, it’s generally worth running a noise filter.</p>
        <p><b><font face="Arial">How many noise filters should I use?</font></b></p>
        <p>Be very careful about using more than one. Running multiple temporal
        noise filters can cause the later filters to have excess confidence in
        their noise/motion estimate. That usually leads to posterization,
        speckling, and banding.</p>
        <p>Running a spatial filter after Peach Smoother can still work
        reasonably well, since its spatial smoothing is pretty subtle — Just
        be sure not to run the spatial filter first.</p>
        <p><b><font face="Arial">Where in my script should I put the noise
        filter?</font></b></p>
        <p>In general, it is best to filter noise as early as possible. This is
        especially true for the Peach, since its noise estimation can be thrown
        off by some filters. For example, if you subtitle your video, the Peach
        may detect the lack of noise in the subtitles.</p>
        <p>With interlaced material, it is a very good idea to run the filter
        before deinterlacing. That’s because good noise reduction can greatly
        improve the accuracy of the deinterlacer.
        <p>&nbsp;
        <p>For inverse telecine the situation is harder to judge. But as a rule
        of thumb, it is still better to run the noise reduction first.</p>
        <p>The exception to this rule is comb filtering. Any comb filters should
        be run before noise reduction, since the noise filter will otherwise
        interpret color crosstalk as motion.</p>
        <p><b><font face="Arial">Can any other tricks help reduce noise?</font></b></p>
        <p>If you’re using a Bt8x8 card, you can turn off Odd and Even Luma
        Peaking. Turning on the card’s Horizontal Filter will reduce noise but
        will also lose some detail.</p>
        <hr>
        <p><b><font face="Arial" size="4">Filter Changes</font></b></p>
        <p>Version 0.9a — Initial release</p>
        <p>Version 0.9b — Allowed parameters to be set; Different defaults;
        Corrected to deal with Y = 16 black; Additional orange smoke</p>
        <p>Version 0.9c — Added parameter checking</p>
        <p>Version 0.9d — Corrected to allow spatial smoothing of more than
        100%</p>
        <p>Version 0.9e — Filter now turns off when jumping between frames</p>
        <p>Version 0.9f — Filter now handles interlaced material correctly;
        The smoothing option has been rescaled to something closer to a real
        percentage; Different defaults; Yet more orange smoke</p>
        <p>Version 0.9g — Enabled spatial (but not temporal) smoothing when
        jumping between frames; Turning off spatial smoothing now improves
        speed; enabled prefetching for a speedup; improved parameter handling</p>
        <p>Version 0.9h — Provided a (legible) onscreen readout of the amount
        of noise. Allowed noise values to be supplied by the user. Allowed
        spatial smoothing in the first frame.</p>
        <p>Version 1.0a — Improved determination of amount of spatial
        smoothing to use. Improved horizontal correlation code. Improved
        accuracy of noise estimate readout. Made temporal color combination
        closer to the theoretical goal. (Side effect: you might want to drop
        your NoiseReduction by about ten points.) Increased role of spatial
        correlation in motion estimates. Changed the name of the Estimates
        option to Readout.</p>
        <p>Version 1.0b — Provided a display of the internal motion estimate
        with the ShowMotion option. Allowed negative Stability settings.</p>
        <p>Version 1.0c — Moved the readout a little further from the edge of
        the screen.</p>
        <!-- #EndEditable -->
      </td>
    </tr>
  </tbody>
</table>
<!-- #EndTemplate -->
</body>
</html>
