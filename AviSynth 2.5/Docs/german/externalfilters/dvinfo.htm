<!DOCTYPE htm PUBLIC "-//W3C//DTD Xhtm 1.0 Transitional//EN" "DTD/xhtm1-transitional.dtd"> 
<htm xmlns="http://www.w3.org/1999/xhtm" xml:lang="de" lang="de">
<head>
 <meta http-equiv="content-type" content="text/htm; charset=iso-8859-1" />
 <meta http-equiv="content-style-type" content="text/css" />
 <meta name="author" content="Arlsair" />
 <meta name="date" content="2004-01-22" />
 <title>DVInfo</title>
 <link rel="stylesheet" type="text/css" href="../../style.css" />
</head><body>
<h1>DVInfo</h1>

<h2>&Uuml;bersicht</h2>
<b>Autor:</b> WarpEnterprises<br />
<b>Version:</b> 16.12.2003<br/>
<b>Download:</b> <a href="http://www.avisynth.org/warpenterprises/" target="_blank">http://www.avisynth.org/warpenterprises/</a><br />
<b>Kategorie:</b> Verschiedenes<br />
<b>Anforderungen:</b> DV-AVI Quelle<br />
<hr>
<h2>Description</h2>
<p>DVInfo reads the Timecode and Recording Date information out of an DV-AVI
file.</p>
<p>Syntax:</p>
<pre><tt>DVInfo</tt>(<i>clip, string &quot;filename&quot;, string &quot;output&quot;, int &quot;x&quot;, int &quot;y&quot;, string &quot;font&quot;, int &quot;size&quot;, int &quot;text_color&quot;, int &quot;halo_color&quot;, string &quot;rec_format&quot;, 
string &quot;tc_format&quot;, bool &quot;show_error&quot;</i>, float &quot;threshold&quot;, int &quot;autoframes&quot;)</pre>
<p>DVInfo opens an DV-AVI file (Type-1 and Type-2, legacy and openDML &gt; 4GB
is supported) and reads the timecode and the recording timestamp of the frame
passed through. Take care: it DOES NOT load the video or audio content of the
AVI, this has to be done DIRECTLY BEFORE with AviSource!</p>
<p>The timecode and recording date are then printed on the frame as if you were
using Subtitle() and the parameters x, y, font, size, text_color, halo_color are
passed right through to Subtitle.</p>
<p>The &quot;run-time&quot; variables &quot;current_frame&quot;,
&quot;tc_time&quot;, &quot;rec_time&quot; are set so that you can use them in an
expression in &quot;output&quot; (this works similar as with ScriptClip, look
there in the docu for more infos).</p>
<p>You can set the generated time format with the parameters rec_format and
tc_format.</p>
<p>With &quot;threshold&quot;&gt;0 the output is switched on if there is a
difference of the recording date between current and last frame which is bigger
than &quot;threshold&quot; seconds. After &quot;autoframes&quot; frames the
output is switched off. That way you get the recording date only at
scenechanges.<br>
Take care: the last <i>processed </i>frame is used, which is not the previous
one when you seek in the clip (works only for linear playback).<br>
With e.g. threshold=0.5 and autoframes=2 you can print it every second and 2
frames long.</p>
<p>This is best explained with an example:</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>LoadPlugin(&quot;c:\myprojects\dvinfo\release\dvinfo.dll&quot;)

file = &quot;c:\myprojects\type2.avi&quot; # so you don't need to type the filename twice

Avisource(file)          # open the video content

DVInfo(file, &quot;rec_time&quot;) # reads the recording timestamp
                         # prints it with the default format into the variable &quot;rec_time&quot;
                         # evaluates this expression (which consists only of the single variable)
                         # displays the result using the default Subtitle parameters</pre>
    </td>
  </tr>
</table>
<p>You can ommit even &quot;rec_time&quot;, since it is the default value of
&quot;output&quot;.</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>DVInfo(file)   # will do the same as above</pre>
    </td>
  </tr>
</table>
<br>
<hr>
<p>This won't work (more than one file):</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>LoadPlugin(&quot;c:\myprojects\dvinfo\release\dvinfo.dll&quot;)

file1 = &quot;c:\myprojects\type2a.avi&quot;
file2 = &quot;c:\myprojects\type2b.avi&quot;

Avisource(file1)+Avisource(file2)  #this is OK so far

DVInfo(file1, &quot;rec_time&quot;)  # but now DVInfo tries to read in file1 the frame numbers of file2!
DVInfo(file2, &quot;rec_time&quot;)  # and vice versa</pre>
    </td>
  </tr>
</table>
<p>Instead, write it this way:</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>LoadPlugin(&quot;c:\myprojects\dvinfo\release\dvinfo.dll&quot;)

file1 = &quot;c:\myprojects\type2a.avi&quot;
file2 = &quot;c:\myprojects\type2b.avi&quot;

Avisource(file1).DVInfo(file1, &quot;rec_time&quot;) + Avisource(file2).DVInfo(file2, &quot;rec_time&quot;)
# now each DVInfo reads its own file
</pre>
    </td>
  </tr>
</table>
<p>This won't work (using Trim):</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>LoadPlugin(&quot;c:\myprojects\dvinfo\release\dvinfo.dll&quot;)

file1 = &quot;c:\myprojects\type2a.avi&quot;

Avisource(file1)
Trim(1000,2000)
DVInfo(file1, &quot;rec_time&quot;)  # now DVInfo gets the wrong frame numbers</pre>
    </td>
  </tr>
</table>
<p>Instead, write it this way:</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>LoadPlugin(&quot;c:\myprojects\dvinfo\release\dvinfo.dll&quot;)

file1 = &quot;c:\myprojects\type2a.avi&quot;
file2 = &quot;c:\myprojects\type2b.avi&quot;

Avisource(file1).DVInfo(file1, &quot;rec_time&quot;) + Avisource(file2).DVInfo(file2, &quot;rec_time&quot;)
# now each DVInfo reads its own file
</pre>
    </td>
  </tr>
</table>
<br>
<hr>
<p>More examples:</p>
<p>You can modify the time format (see AviSynth Docu &gt;&gt; Syntax &gt;&gt;
function Time for all details):</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>DVInfo(file, &quot;rec_time&quot;, rec_format=&quot;%H:%M:%S&quot;) # print only time without date

or

DVInfo(file, &quot;rec_time&quot;, rec_format=&quot;%A, %H:%M:%S&quot;) # print full weekday name plus time</pre>
    </td>
  </tr>
</table>
<p>The tc_time holds the position on the tape in hours, minutes, seconds and
frames.<br>
I put the frames into the day-of-month position, this is somewhat dirty but you
can easily display the frame number by using the &quot;month&quot; format
symbol:<br>
</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>DVInfo(file, &quot;tc_time&quot;, tc_format=&quot;%d&quot;) # print only the frame number</pre>
    </td>
  </tr>
</table>
<p>You can put a more complex expression in the &quot;output&quot;:</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>DVInfo(file, &quot;tc_time + chr(32) + rec_time + chr(32) + current_frane&quot;)
# displays timecode, recording time and frame number separated by spaces</pre>
    </td>
  </tr>
</table>
<p>If you want to add other text:</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>text = &quot;HALLO WORLD &quot;
DVInfo(file, &quot;text + rec_time&quot;) # displays &quot;HALLO WORLD &quot; and the recording time.</pre>
    </td>
  </tr>
</table>
<p>You have to do it this way as it is not possible to put quotes in a string.</p>
<p>As you see you can use every script variable in &quot;output&quot;.</p>
<p>Printing the recording date only at scenechanges:.</p>
<table width="75%" border="1">
  <tr>
    <td>
      <pre>DVInfo(file, threshold=1)   # will print it 25 frames long if the difference is &gt;1 sec</pre>
    </td>
  </tr>
</table>
<h3>Error handling:</h3>
<p>If the framenumber requested is bigger than the framecount (this should not
happen) an error message is put into rec_time and tc_time.<br>
If no timecode or recording timestamp can be found, or if there is some other
read error, an error message is put into rec_time and tc_time.</p>
<p>These error messages are supressed if you use show_error = false.</p>
<p>If the AVI can't be opened, or the result of &quot;output&quot; is not a
string, an AviSynth error is thrown.</p>
<hr>
<h3>Technical note:</h3>
<p>To read the AVI-data I used the code from kino by Arne Schirmacher.<br>
I modified it so it will work with openDML - files &gt; 2GB, compile on Win32
and stripped of all other than read functions.</p>
<p>Ernst Peché, 2003-12-16</p>
<p>&nbsp;</p>
</html>
