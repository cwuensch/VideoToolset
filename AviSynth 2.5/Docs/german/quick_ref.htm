<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">  
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="de" lang="de">
<head>
 <meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
 <meta http-equiv="content-style-type" content="text/css" />
 <meta name="author" content="WarpEnterprises, Arlsair" />
 <meta name="date" content="2003-07-09" />
 <title>Kurzreferenz</title>
 <link rel="stylesheet" type="text/css" href="../style2.css" />
</head><body>
<b><u>Abk&uuml;rzungen:</u></b><br />
Benannte Funktionsargumente werden in Anf&uuml;hrungszeichen &quot;xyz&quot; geschrieben und sind immer optional. Nichtoptionale benannte Argumente sind in eckige Klammern [xyz] gesetzt.<br />
M&ouml;gliche Typen von nicht-clip-Argumenten sind int (Ganzzahl), float (Dezimalzahl), string (Zeichenkette) oder bool (Wahr/Falsch).<br />
<br />
<tt><font color="#FFFFFF">[YV12], [YUY2], [RGB32] und [RGB24]</font></tt> gibt an, dass dieser Farbraum unterst&uuml;tzt wird. Guck dir auch die <a href="corefilters/convert.html#formats">Farbraumkonvertierungs Filter</a> f&uuml;r mehr Informationen an.<br />
<tt<font color="#FFFFFF">[v2.04]</font></tt> gibt an, in welcher AviSynth Version der Filter eingef&uuml;hrt wurde.<br />
<br />
<hr />
<br />
<h1>Alphabetische Auflistung</h1>
<br />
<b><a href="corefilters/addborders.htm">AddBorders</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AddBorders(</tt><i>clip, int left, int top, int right, int bottom, int color</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/amplify.htm">Amplify / AmplifydB</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Amplify(</tt><i>clip, float amount1 [,...]</i><tt>)</tt></li>
 <li><tt>AmplifydB(</tt><i>clip, float amount1 [,...]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/animate.htm">Animate / ApplyRange</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Animate(</tt><i>clip, int start_frame, int end_frame, string filtername, start_args, end_args</i><tt>)</tt></li>
 <li><tt>ApplyRange(</tt><i>clip, int start_frame, int end_frame, string filtername, args</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.51]</font></tt></li>
</ul>

<b><a href="corefilters/assumeframefield.htm">AssumeFrameBased / AssumeFieldBased</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AssumeFrameBased(</tt><i>clip</i><tt>)</tt></li>
 <li><tt>AssumeFieldBased(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/assumefieldfirst.htm">AssumeBFF / AssumeTFF</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AssumeBFF(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
 <li><tt>AssumeTFF(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/fps.htm#AssumeFPS">AssumeFPS</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AssumeFPS(</tt><i>clip, float fps, bool &quot;sync_audio&quot;</i><tt>)</tt></li>
 <li><tt>AssumeFPS(</tt><i>clip, int numerator [, int denominator], bool &quot;sync_audio&quot;</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/assumerate.htm">AssumeSampleRate</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AssumeSampleRate(</tt><i>clip, int samplerate</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
</ul>

<b><a href="corefilters/audiodub.htm">AudioDub</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AudioDub(</tt><i>video_clip, audio_clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/avisource.htm">AVISource / OpenDMLSource / AVIFileSource / WAVSource</a></b>
<ul>
 <li><tt>AVISource(</tt><i>string filename [, ...], bool &quot;audio&quot;, string &quot;pixel_type&quot;</i><tt>)</tt></li>
 <li><tt>OpenDMLSource(</tt><i>string filename [, ...], bool &quot;audio&quot;, string &quot;pixel_type&quot;</i><tt>)</tt></li>
 <li><tt>AVIFileSource(</tt><i>string filename [, ...], bool &quot;audio&quot;, string &quot;pixel_type&quot;</i><tt>)</tt></li>
 <li><tt>WAVSource(</tt><i>string filename [, ...]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/blankclip.htm">BlankClip / Blackness</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>BlankClip</tt>(<i>clip clip, int &quot;length&quot;, int &quot;width&quot;, int &quot;height&quot;, string &quot;pixel_type&quot;, float &quot;fps&quot;, int &quot;fps_denominator&quot;, int &quot;audio_rate&quot;, bool &quot;stereo&quot;, bool &quot;sixteen_bit&quot;, int &quot;color&quot;</i><tt>)</tt></li>
 <li><tt>Blackness</tt>(<i>clip clip, int &quot;length&quot;, int &quot;width&quot;, int &quot;height&quot;, string &quot;pixel_type&quot;, float &quot;fps&quot;, int &quot;fps_denominator&quot;, int &quot;audio_rate&quot;, bool &quot;stereo&quot;, bool &quot;sixteen_bit&quot;, int &quot;color&quot;</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/blur.htm">Blur / Sharpen</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Blur(</tt><i>clip, float amount</i><tt>)</tt></li>
 <li><tt>Sharpen(</tt><i>clip, float amount</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/bob.htm">Bob</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Bob(</tt><i>clip, float &quot;b&quot;, float &quot;c&quot;, float &quot;height&quot;</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/fps.htm#ChangeFPS">ChangeFPS</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ChangeFPS(</tt><i>clip, float fps [, bool linear]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.06] [v2.54]</font></tt></li>
 <li><tt>ChangeFPS(</tt><i>clip, int numerator [, int denominator, bool linear]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.06] [2.54]</font></tt></li>
</ul>

<b><a href="corefilters/colorbars.htm">ColorBars</a></b> <tt><font color="#FFFFFF">[RGB32]</font></tt>
<ul>
 <li><tt>ColorBars(</tt><i>int width, int height</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/coloryuv.htm">ColorYUV</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>ColorYUV(</tt><i>clip, float &quot;gain_y&quot;, float &quot;off_y&quot;, float &quot;gamma_y&quot;, float &quot;cont_y&quot;, float &quot;gain_u&quot;, float &quot;off_u&quot;, float &quot;gamma_u&quot;, float &quot;cont_u&quot;, float &quot;gain_v&quot;, float &quot;off_v&quot;, float &quot;gamma_v&quot;, float &quot;cont_v&quot;, string &quot;levels&quot;, string &quot;opt&quot;, bool &quot;showyuv&quot;, bool &quot;analyze&quot;, bool &quot;autowhite&quot;, bool &quot;autogain&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/complementparity.htm">ComplementParity</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ComplementParity(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/compare.htm">Compare</a></b> <tt><font color="#FFFFFF">[YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Compare(</tt><i>clip_filtered, clip_original, string &quot;channels&quot;, string &quot;logfile&quot;, bool &quot;show_graph&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/conditionalfilter.htm">ConditionalFilter / FrameEvaluate / ScriptClip</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ConditionalFilter</tt>(<i>clip testclip, clip source1, clip source2, string filter, string operator, string value, bool &quot;show&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
 <li><tt>FrameEvaluate</tt>(<i>clip clip, script function, bool &quot;after_frame&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52] [v2.53]</font></tt></li>
 <li><tt>ScriptClip</tt>(<i>clip clip, string function, bool &quot;show&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
</ul>

<b><a href="corefilters/conditionalreader.htm">ConditionalReader</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ConditionalReader</tt>(<i>clip clip, string filename, string variablename [, bool show]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/convert.htm">ConvertBackToYUY2 / ConvertToRGB / ConvertToRGB24 / ConvertToRGB32 / ConvertToYUY2 / ConvertToYV12</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ConvertToBackYUY2(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
 <li><tt>ConvertToRGB(</tt><i>clip, bool &quot;interlaced&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
 <li><tt>ConvertToRGB24(</tt><i>clip, bool &quot;interlaced&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
 <li><tt>ConvertToRGB32(</tt><i>clip, bool &quot;interlaced&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
 <li><tt>ConvertToYUY2(</tt><i>clip, bool &quot;interlaced&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.51]</font></tt></li>
 <li><tt>ConvertToYV12(</tt><i>clip, bool &quot;interlaced&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50] [v2.51]</font></tt></li>
</ul>

<b><a href="corefilters/convertaudio.htm">ConvertAudioTo8bit / ConvertAudioTo16bit / ConvertAudioTo24bit / ConvertAudioTo32bit / ConvertAudioToFloat</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ConvertAudioTo8bit(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
 <li><tt>ConvertAudioTo16bit(</tt><i>clip</i><tt>)</tt></li>
 <li><tt>ConvertAudioTo24bit(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.53]</font></tt></li>
 <li><tt>ConvertAudioTo32bit(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
 <li><tt>ConvertAudioToFloat(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/fps.htm#ConvertFPS">ConvertFPS</a></b> <tt><font color="#FFFFFF">[YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ConvertFPS(</tt><i>clip, int new_rate, int &quot;zone&quot;, int &quot;vbi&quot;</i><tt>)</tt></li>
</ul> 

<b><a href="corefilters/converttomono.htm">ConvertToMono</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ConvertToMono(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/crop.htm">Crop / CropBottom</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Crop(</tt><i>clip, int left, int top, int width, int height, bool &quot;align&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.53]</font></tt></li>
 <li><tt>Crop(</tt><i>clip, int left, int top, int -right, int -bottom, bool &quot;align&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.01] [v2.53]</font></tt></li>
 <li><tt>CropBottom(</tt><i>clip, int count, bool &quot;align&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.53]</font></tt></li>
</ul>

<b><a href="corefilters/delayaudio.htm">DelayAudio</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>DelayAudio(</tt><i>clip, float seconds</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/deleteframe.htm">DeleteFrame</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>DeleteFrame(</tt><i>clip, int frame</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/directshowsource.htm">DirectShowSource</a></b>
<ul>
 <li><tt>DirectShowSource(</tt><i>string filename, int &quot;fps&quot;, bool &quot;seek&quot;, bool &quot;audio&quot;, bool &quot;video&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07] [v2.53]</font></tt></li>
</ul>

<b><a href="corefilters/dissolve.htm">Dissolve</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Dissolve(</tt><i>clip1, clip2 [,...], int overlap</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/doubleweave.htm">DoubleWeave</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>DoubleWeave(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/duplicateframe.htm">DuplicateFrame</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>DuplicateFrame(</tt><i>clip, int frame</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/ensuresync.htm">EnsureVBRMP3Sync</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>EnsureVBRMP3Sync(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.06]</font></tt></li>
</ul>

<b><a href="corefilters/fade.htm">FadeIn / FadeOut / FadeIn2 / FadeOut2 / FadeIO / FadeIO2</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>FadeOut(</tt><i>clip, int frames, int &quot;color&quot;</i><tt>)</tt></li>
 <li><tt>FadeOut2(</tt><i>clip, int frames, int &quot;color&quot;</i><tt>)</tt></li>
 <li><tt>FadeIn(</tt><i>clip, int frames, int &quot;color&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
 <li><tt>FadeIn2(</tt><i>clip, int frames, int &quot;color&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
 <li><tt>FadeIO(</tt><i>clip, int frames, int &quot;color&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
 <li><tt>FadeIO2(</tt><i>clip, int frames, int &quot;color&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
</ul>

<b><a href="corefilters/fixbrokenchromaupsampling.htm">FixBrokenChromaUpsampling</a></b> <tt><font color="#FFFFFF">[YUY2]</font></tt>
<ul>
 <li><tt>FixBrokenChromaUpsampling(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/fixluminance.htm">FixLuminance</a></b> <tt><font color="#FFFFFF">[YUY2]</font></tt>
<ul>
 <li><tt>FixLuminance(</tt><i>clip, int intercept, int slope</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/flip.htm">FlipHorizontal / FlipVertical</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>FlipHorizontal(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
 <li><tt>FlipVertical(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/freezeframe.htm">FreezeFrame</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>FreezeFrame(</tt><i>clip, int first_frame, int last_frame, int source_frame</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/convolution.htm">GeneralConvolution</a></b> <tt><font color="#FFFFFF">[RGB32]</font></tt>
<ul>
 <li><tt>GeneralConvolution(</tt><i>clip, int bias, string matrix</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/getchannel.htm">GetChannel</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>GetChannel(</tt><i>clip, int ch1 [, int ch2, ...]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/greyscale.htm">Greyscale</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Greyscale(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/Histogram.htm">Histogram</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>Histogram(</tt><i>clip [, string mode]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.53] [v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/image.htm">ImageReader / ImageWriter</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ImageReader</tt>(<i>string path, int begin, int end, int fps, bool &quot;use_DevIL&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
 <li><tt>ImageWriter(</tt><i>clip, string &quot;path&quot;, string &quot;format&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.51]</font></tt></li>
 <li><tt>ImageWriter(</tt><i>clip, string &quot;path&quot;, int &quot;begin&quot;, int &quot;end&quot;, string &quot;format&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.52]</font></tt></li>
</ul>

<b><a href="corefilters/import.htm">Import</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Import(</tt><i>string filename</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.5 ???]</font></tt></li>
</ul>

<b><a href="corefilters/info.htm">Info</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Info(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/interleave.htm">Interleave</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Interleave(</tt><i>clip1, clip2 [, ...]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/invert.htm">Invert</a></b> <tt><font color="#FFFFFF">[RGB32]</font></tt>
<ul>
 <li><tt>Invert(</tt><i>clip, string &quot;channels&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.53]</font></tt></li>
</ul>

<b><a href="corefilters/killaudio.htm">KillAudio</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>KillAudio(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/layer.htm">Layer / Mask / ResetMask / ColorKeyMask</a></b> <tt><font color="#FFFFFF">[RGB32]</font></tt>
<ul>
 <li><tt>Layer(</tt><i>clip, layer_clip, string &quot;op&quot;, int &quot;level&quot;, int &quot;x&quot;, int &quot;y&quot;, int &quot;threshold&quot;, bool &quot;use_chroma&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[YUY2] [RGB32] [v2.04]</font></tt></li>
 <li><tt>Mask(</tt><i>clip, mask_clip</i><tt>)</tt> <tt><font color="#FFFFFF">[RGB32] [v2.04]</font></tt></li>
 <li><tt>ResetMask(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[RGB32] [v2.06]</font></tt></li>
 <li><tt>ColorKeyMask(</tt><i>clip, int color, int tolerance</i><tt>)</tt> <tt><font color="#FFFFFF">[RGB32] [v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/letterbox.htm">Letterbox</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Letterbox(</tt><i>clip, int top, int bottom, [int left, int right]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/levels.htm">Levels</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Levels(</tt><i>clip, int input_low, float gamma, int input_high, int output_low, int output_high, bool &quot;coring&quot;</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/limiter.htm">Limiter</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>Limiter(</tt><i>clip, int &quot;min_luma&quot;, int &quot;max_luma&quot;, int &quot;min_chroma&quot;, int &quot;max_chroma&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/loop.htm">Loop</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Loop(</tt><i>clip, int &quot;times&quot;, int &quot;start&quot;, int &quot;end&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/mergechannels.htm">MergeChannels</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>MergeChannels(</tt><i>clip1, clip2 [, ...]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/merge.htm">MergeChroma / MergeLuma</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>MergeChroma(</tt><i>clip1, clip2, float weight</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
 <li><tt>MergeLuma(</tt><i>clip1, clip2, float weight</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/message.htm">MessageClip</a></b> <tt><font color="#FFFFFF">[RGB32]</font></tt>
<ul>
 <li><tt>MessageClip(</tt><i>string message, int &quot;width&quot;, int &quot;height&quot;, bool &quot;shrink&quot;, int &quot;text_color&quot;, int &quot;halo_color&quot;, int &quot;bg_color&quot;</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/mixaudio.htm">MixAudio</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>MixAudio(</tt><i>clip1, clip2, float clip1_factor, float &quot;clip2_factor&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/normalize.htm">Normalize</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Normalize(</tt><i>clip, float &quot;volume&quot;, bool &quot;show&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04]</font></tt></li>
</ul>

<b><a href="corefilters/overlay.htm">Overlay</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>Overlay(</tt><i>clip clip, clip overlay [,int x, int y, clip mask, float opacity, string mode, bool greymask, string output, bool ignore_conditional, bool pc_range]</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/peculiar.htm">PeculiarBlend</a></b> <tt><font color="#FFFFFF">[YUY2]</font></tt>
<ul>
 <li><tt>PeculiarBlend(</tt><i>clip, int cutoff</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/pulldown.htm">Pulldown</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Pulldown(</tt><i>clip, int a, int b</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/adjust.htm">RGBAdjust</a></b> <tt><font color="#FFFFFF">[YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>RGBAdjust(</tt><i>clip, float red, float green, float blue, float alpha</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/reduceby2.htm">ReduceBy2 / HorizontalReduceBy2 / VerticalReduceBy2</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>HorizontalReduceBy2(</tt><i>clip</i><tt>)</tt></li>
 <li><tt>VerticalReduceBy2(</tt><i>clip</i><tt>)</tt></li>
 <li><tt>ReduceBy2(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/resampleaudio.htm">ResampleAudio</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ResampleAudio(</tt><i>clip, int new_sample_rate</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/resize.htm">BilinearResize / BicubicResize / LanczosResize / PointResize</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>BilinearResize(</tt><i>clip, int target_width, int target_height</i><tt>)</tt></li>
 <li><tt>BilinearResize(</tt><i>clip, int target_width, int target_height, float &quot;src_left&quot;, float &quot;src_top&quot;, float &quot;src_width&quot;, float &quot;src_height&quot;</i><tt>)</tt></li>
 <li><tt>BicubicResize(</tt><i>clip, int target_width, int target_height, float &quot;b&quot;, float &quot;c&quot;</i><tt>)</tt></li>
 <li><tt>BicubicResize(</tt><i>clip, int target_width, int target_height, float &quot;b&quot;, float &quot;c&quot;, float &quot;src_left&quot;, float &quot;src_top&quot;, float &quot;src_width&quot;, float &quot;src_height&quot;</i><tt>)</tt></li>
 <li><tt>LanczosResize(</tt><i>clip, int target_width, int target_height</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.06]</font></tt></li>
 <li><tt>LanczosResize(</tt><i>clip, int target_width, int target_height, float &quot;src_left&quot;, float &quot;src_top&quot;, float &quot;src_width&quot;, float &quot;src_height&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.06]</font></tt></li>
 <li><tt>PointResize(</tt><i>clip, int target_width, int target_height</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
 <li><tt>PointResize(</tt><i>clip, int target_width, int target_height, float &quot;src_left&quot;, float &quot;src_top&quot;, float &quot;src_width&quot;, float &quot;src_height&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.07]</font></tt></li>
</ul>

<b><a href="corefilters/reverse.htm">Reverse</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Reverse(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/segmentedsource.htm">SegmentedAVISource / SegmentedDirectShowSource</a></b>
<ul>
 <li><tt>SegmentedAVISource(</tt><i>string base_filename [, ...], bool &quot;audio&quot;</i><tt>)</tt></li>
 <li><tt>SegmentedDirectShowSource(</tt><i>string base_filename [, ...]&nbsp;[, fps]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/select.htm">SelectEven / SelectOdd</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SelectEven(</tt><i>clip</i><tt>)</tt></li>
 <li><tt>SelectOdd(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/selectevery.htm">SelectEvery</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SelectEvery(</tt><i>clip, int step_size [, int offset1 [, int offset2 [,...]]]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/selectrangeevery.htm">SelectRangeEvery</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SelectRangeEvery(</tt><i>clip, int period, int range</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/seperatefields.htm">SeparateFields</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SeparateFields(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/showalpha.htm">ShowAlpha</a></b> <tt><font color="#FFFFFF">[RGB32]</font></tt>
<ul>
 <li><tt>ShowAlpha(</tt><i>clip, string pixel_type</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.53] [v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/showfive.htm">ShowFiveVersions</a></b> <tt><font color="#FFFFFF">[YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ShowFiveVersions(</tt><i>clip1, clip2, clip3, clip4, clip5</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/showframes.htm">ShowFrameNumber / ShowSMPTE</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>ShowFrameNumber(</tt><i>clip, bool &quot;scroll&quot;</i><tt>)</tt></li>
 <li><tt>ShowSMPTE(</tt><i>clip, float fps</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/soften.htm">SpatialSoften / TemporalSoften</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>SpatialSoften(</tt><i>clip, int radius, int luma_threshold, int chroma_threshold</i><tt>)</tt></li>
 <li><tt>TemporalSoften(</tt><i>clip, int radius, int luma_threshold, int chroma_threshold, int &quot;scenechange&quot;, int &quot;mode&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/splice.htm">AlignedSplice / UnalignedSplice</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>AlignedSplice(</tt><i>clip1, clip2 [, ...]</i><tt>)</tt></li>
 <li><tt>UnAlignedSplice(</tt><i>clip1, clip2 [, ...]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/ssrc.htm">SSRC</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SSRC(</tt><i>int samplerate, bool &quot;fast&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/stack.htm">StackHorizontal / StackVertical</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>StackHorizontal(</tt><i>clip1, clip2 [, ...]</i><tt>)</tt></li>
 <li><tt>StackVertical(</tt><i>clip1, clip2 [, ...]</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/subtitle.htm">Subtitle</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Subtitle(</tt><i>clip, string text, int &quot;x&quot;, int &quot;y&quot;, int &quot;first_frame&quot;, int &quot;last_frame&quot;, string &quot;font&quot;, int &quot;size&quot;, int &quot;text_color&quot;, int &quot;halo_color&quot;</i><tt>)</tt></li>
 <li><tt>Subtitle(</tt><i>clip, string &quot;text&quot;</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/subtract.htm">Subtract</a></b> <tt><font color="#FFFFFF">[YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Subtract(</tt><i>clip1, clip2</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/supereq.htm">SuperEQ</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SuperEQ(</tt><i>string filename</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/swap.htm">SwapUv/ UToY / VToY / YToUV</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>SwapUV(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
 <li><tt>UToY(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
 <li><tt>VToY(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
 <li><tt>YToUV(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.50]</font></tt></li>
</ul>

<b><a href="corefilters/swapfields.htm">SwapFields</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>SwapFields(</tt><i>clip</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/tone.htm">Tone</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Tone(</tt><i>float length, float frequency, int samplerate, int channels, string type</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.54]</font></tt></li>
</ul>

<b><a href="corefilters/trim.htm">Trim</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Trim(</tt><i>clip, int first_frame, int last_frame</i><tt>)</tt></li>
 <li><tt>Trim(</tt><i>clip, int first_frame, int -num_frame</i><tt>)</tt></li>
</ul>

<b><a href="corefilters/turn.htm">TurnLeft / TurnRight</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2] [RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>TurnLeft(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.51]</font></tt></li>
 <li><tt>TurnRight(</tt><i>clip</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.51]</font></tt></li>
</ul>

<b><a href="corefilters/tweak.htm">Tweak</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2]</font></tt>
<ul>
 <li><tt>Tweak(</tt><i>clip, float &quot;hue&quot;, float &quot;sat&quot;, float &quot;bright&quot;, float &quot;cont&quot;, bool &quot;coring&quot;</i><tt>)</tt> <tt><font color="#FFFFFF">[v2.04] [v2.53]</font></tt></li>
</ul>

<b><a href="corefilters/version.htm">Version</a></b> <tt><font color="#FFFFFF">[RGB24]</font></tt>
<ul>
 <li><tt>Version()</tt></li>
</ul>

<b><a href="corefilters/weave.htm">Weave</a></b> <tt><font color="#FFFFFF">[YV12] [YUY2][RGB32] [RGB24]</font></tt>
<ul>
 <li><tt>Weave(</tt><i>clip</i><tt>)</tt></li>
</ul>

</body>
</html>